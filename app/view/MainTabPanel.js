/*
 * File: app/view/MainTabPanel.js
 *
 * This file was generated by Sencha Architect version 3.5.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.4.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.4.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Contacts.view.MainTabPanel', {
    extend: 'Ext.tab.Panel',
    alias: 'widget.maintabpanel',

    requires: [
        'Contacts.view.HomePanel',
        'Contacts.view.IagNavView',
        'Contacts.view.RdgNavView',
        'Contacts.view.PodNavView',
        'Contacts.view.SearchNavView',
        'Ext.tab.Bar',
        'Ext.Panel',
        'Ext.navigation.View',
        'Ext.MessageBox',
        'Ext.LoadMask',
        'Contacts.view.AboutPanel'
    ],

    config: {
        tabBar: {
            docked: 'bottom',
            itemId: 'mytabbar'
        },
        items: [
            {
                xtype: 'homepanel',
                itemId: 'homepanel',
                title: 'Начало',
                iconCls: 'home'
            },
            {
                xtype: 'iagnavview',
                itemId: 'iagnavview',
                title: 'ИАГ',
                iconCls: 'team'
            },
            {
                xtype: 'rdgnavview',
                itemId: 'rdgnavview',
                title: 'РДГ',
                iconCls: 'team'
            },
            {
                xtype: 'podnavview',
                itemId: 'podnavview1',
                title: 'Поделения',
                iconCls: 'team'
            },
            {
                xtype: 'searchnavview',
                title: 'Търсене',
                iconCls: 'search'
            }
        ],
        listeners: [
            {
                fn: 'onNavigationviewActivate',
                event: 'activate',
                delegate: '#iagnavview'
            },
            {
                fn: 'onNavigationviewActivate1',
                event: 'activate',
                delegate: '#rdgnavview'
            },
            {
                fn: 'onPodNavActivate',
                event: 'activate',
                delegate: '#podnavview1'
            }
        ]
    },

    onNavigationviewActivate: function(newActiveItem, container, oldActiveItem, eOpts) {
        this.loadStore('IagJsonPStore');
    },

    onNavigationviewActivate1: function(newActiveItem, container, oldActiveItem, eOpts) {
        this.loadStore('PodJsonPStore');
    },

    onPodNavActivate: function(newActiveItem, container, oldActiveItem, eOpts) {
        this.loadStore('PodJsonPStore');
    },

    loadStore: function(store) {
        console.log('Hello');

        Ext.Viewport.setMasked({ xtype: 'loadmask', message: 'Зареждам ...', indicator:true});
                Ext.getStore(store).load({
                    callback: function(records, operation, success) {
                        if(success)
                        {
                            Ext.Viewport.setMasked(false);

                            console.log('success');
                        } else {
                            Ext.Viewport.setMasked(false);
                            Ext.Msg.alert('Събщение', 'Проверете връзката с интернет и рестартирайте приложението', Ext.emptyFn);
                        }
                    }
                });
    }

});